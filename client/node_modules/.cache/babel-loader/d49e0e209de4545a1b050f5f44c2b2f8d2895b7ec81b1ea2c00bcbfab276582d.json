{"ast":null,"code":"import React from\"react\";import{Line}from\"react-chartjs-2\";import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from\"chart.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const ExpenseTrendChart=_ref=>{let{expenses}=_ref;const dates=[...new Set(expenses.map(expense=>new Date(expense.date).toLocaleDateString()))];const expenseData=dates.map(date=>expenses.filter(expense=>new Date(expense.date).toLocaleDateString()===date).reduce((sum,expense)=>sum+expense.amount,0));const data={labels:dates,datasets:[{label:\"Expense Over Time\",data:expenseData,fill:false,borderColor:\"rgba(75,192,192,1)\",tension:0.1}]};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Expense Trend Over Time\"}),/*#__PURE__*/_jsx(Line,{data:data})]});};export default ExpenseTrendChart;","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","ExpenseTrendChart","_ref","expenses","dates","Set","map","expense","Date","date","toLocaleDateString","expenseData","filter","reduce","sum","amount","data","labels","datasets","label","fill","borderColor","tension","children"],"sources":["C:/Users/kubal/Dokumenty/GitHub/ExpanseTracker/expense-tracker/client/src/components/charts/ExpenseTrendChart.js"],"sourcesContent":["import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst ExpenseTrendChart = ({ expenses }) => {\r\n  const dates = [\r\n    ...new Set(\r\n      expenses.map((expense) => new Date(expense.date).toLocaleDateString())\r\n    ),\r\n  ];\r\n  const expenseData = dates.map((date) =>\r\n    expenses\r\n      .filter((expense) => new Date(expense.date).toLocaleDateString() === date)\r\n      .reduce((sum, expense) => sum + expense.amount, 0)\r\n  );\r\n\r\n  const data = {\r\n    labels: dates,\r\n    datasets: [\r\n      {\r\n        label: \"Expense Over Time\",\r\n        data: expenseData,\r\n        fill: false,\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Expense Trend Over Time</h3>\r\n      <Line data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseTrendChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,iBAAiB,CACtC,OACEC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,KAAK,CACLC,OAAO,CACPC,MAAM,KACD,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElBX,OAAO,CAACY,QAAQ,CACdX,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,KAAK,CACLC,OAAO,CACPC,MACF,CAAC,CAED,KAAM,CAAAM,iBAAiB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAAAE,KAAK,CAAG,CACZ,GAAG,GAAI,CAAAC,GAAG,CACRF,QAAQ,CAACG,GAAG,CAAEC,OAAO,EAAK,GAAI,CAAAC,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,CACvE,CAAC,CACF,CACD,KAAM,CAAAC,WAAW,CAAGP,KAAK,CAACE,GAAG,CAAEG,IAAI,EACjCN,QAAQ,CACLS,MAAM,CAAEL,OAAO,EAAK,GAAI,CAAAC,IAAI,CAACD,OAAO,CAACE,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,GAAKD,IAAI,CAAC,CACzEI,MAAM,CAAC,CAACC,GAAG,CAAEP,OAAO,GAAKO,GAAG,CAAGP,OAAO,CAACQ,MAAM,CAAE,CAAC,CACrD,CAAC,CAED,KAAM,CAAAC,IAAI,CAAG,CACXC,MAAM,CAAEb,KAAK,CACbc,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,mBAAmB,CAC1BH,IAAI,CAAEL,WAAW,CACjBS,IAAI,CAAE,KAAK,CACXC,WAAW,CAAE,oBAAoB,CACjCC,OAAO,CAAE,GACX,CAAC,CAEL,CAAC,CAED,mBACEvB,KAAA,QAAAwB,QAAA,eACE1B,IAAA,OAAA0B,QAAA,CAAI,yBAAuB,CAAI,CAAC,cAChC1B,IAAA,CAACX,IAAI,EAAC8B,IAAI,CAAEA,IAAK,CAAE,CAAC,EACjB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}